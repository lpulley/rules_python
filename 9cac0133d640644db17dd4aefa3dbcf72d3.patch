From 9cac0133d640644db17dd4aefa3dbcf72d35b5eb Mon Sep 17 00:00:00 2001
From: Logan Pulley <lpulley@ocient.com>
Date: Thu, 22 Jun 2023 21:15:25 +0000
Subject: [PATCH 2/8] Combine matching ireqs rather than taking the last

---
 piptools/resolver.py | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git piptools/resolver.py piptools/resolver.py
index 1910b918..10d8aea1 100644
--- piptools/resolver.py
+++ piptools/resolver.py
@@ -502,7 +502,16 @@ def __init__(
         self.unsafe_constraints: set[InstallRequirement] = set()
 
         self.existing_constraints = existing_constraints
-        self._constraints_map = {key_from_ireq(ireq): ireq for ireq in constraints}
+
+        # Categorize InstallRequirements into sets by key
+        constraints_sets: DefaultDict[str, set[InstallRequirement]] = collections.defaultdict(set)
+        for ireq in constraints:
+            constraints_sets[key_from_ireq(ireq)].add(ireq)
+        # Collapse each set of InstallRequirements using combine_install_requirements
+        self._constraints_map = {
+            ireq_key: combine_install_requirements(ireqs)
+            for ireq_key, ireqs in constraints_sets.items()
+        }
 
         # Make sure there is no enabled legacy resolver
         options.deprecated_features_enabled = omit_list_value(
@@ -759,9 +768,14 @@ def _get_install_requirement_from_candidate(
         ireq_key = key_from_ireq(ireq)
         pinned_ireq._required_by = reverse_dependencies.get(ireq_key, set())
 
-        # Save source for annotation
-        source_ireq = self._constraints_map.get(ireq_key)
-        if source_ireq is not None:
-            pinned_ireq._source_ireqs = [source_ireq]
+        # Save sources for annotation
+        constraint_ireq = self._constraints_map.get(ireq_key)
+        if constraint_ireq is not None:
+            if hasattr(constraint_ireq, "_source_ireqs"):
+                # If the constraint is combined (has _source_ireqs), use those
+                pinned_ireq._source_ireqs = constraint_ireq._source_ireqs
+            else:
+                # Otherwise (the constraint is not combined) it is the source
+                pinned_ireq._source_ireqs = [constraint_ireq]
 
         return pinned_ireq
